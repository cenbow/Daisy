<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yourong.core.ic.dao.ProjectNoticeMapper" >
  <resultMap id="BaseResultMap" type="ProjectNotice" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="notice_message" property="noticeMessage" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="index_show" property="indexShow" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, start_time, end_time, sort, status, notice_message, create_time, 
    update_time, remarks, del_flag,index_show
  </sql>
  <insert id="insertSelective" parameterType="ProjectNotice" >
    insert into ic_project_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="indexShow != null" >
        index_show,
      </if>
      <if test="noticeMessage != null" >
        notice_message,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="indexShow != null" >
        #{indexShow,jdbcType=INTEGER},
      </if>
      <if test="noticeMessage != null" >
        #{noticeMessage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ProjectNotice" >
    update ic_project_notice
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
       <if test="indexShow != null" >
        index_show = #{indexShow,jdbcType=INTEGER},
      </if>
      <if test="noticeMessage != null" >
        notice_message = #{noticeMessage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="batchDelete" parameterType="java.lang.Long" >
    delete from ic_project_notice
    where id in  <foreach collection="ids" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach>  
  </delete>
  <select id="findByPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from ic_project_notice
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = #{map.id}
        </if>
        <if test=" map.projectId != null" >
          project_id = #{map.projectId}
        </if>
        <if test=" map.startTime != null" >
          start_time = #{map.startTime}
        </if>
        <if test=" map.endTime != null" >
          end_time = #{map.endTime}
        </if>
        <if test=" map.sort != null" >
          sort = #{map.sort}
        </if>
        <if test=" map.status != null" >
          status = #{map.status}
        </if>
        <if test=" map.indexShow != null" >
          index_show = #{map.indexShow}
        </if>
        <if test=" map.noticeMessage != null" >
          notice_message = #{map.noticeMessage}
        </if>
        <if test=" map.createTime != null" >
          create_time = #{map.createTime}
        </if>
        <if test=" map.updateTime != null" >
          update_time = #{map.updateTime}
        </if>
        <if test=" map.remarks != null" >
          remarks = #{map.remarks}
        </if>
        <if test=" map.delFlag != null" >
          del_flag = #{map.delFlag}
        </if>
      </where>
    </if>
  </select>
  <sql id="Base_Column_List_Pagin" >
    t.id  as  id,
	t.project_id  as  project_id,
	t.start_time  as  start_time,
	t.end_time  as  end_time,
	t.sort  as  sort,
	t.status  as  status,
	t.index_show  as  indexShow,
	t.notice_message  as  notice_message,
	t.create_time  as  create_time,
	t.update_time  as  update_time,
	t.remarks  as  remarks,
	t.del_flag  as  del_flag,
	p.name as project_name
  </sql>
  
  
  <resultMap id="customResultMap" type="com.yourong.core.ic.model.ProjectNotice" extends="BaseResultMap">
		<result column="project_name" property="projectName" jdbcType="VARCHAR" />
		<result column="online_time" property="onlineTime" jdbcType="TIMESTAMP" />
		<result column="notice_notice" property="noticeNotice" jdbcType="INTEGER" />
  </resultMap>

  <select id="selectForPagin" resultMap="customResultMap" >
    select 
    <include refid="Base_Column_List_Pagin" />
    from ic_project_notice as t left join ic_project as p on t.project_id = p.id
      where  t.status <![CDATA[<= ]]> 10 and t.del_flag > 0 and p.status <![CDATA[ < ]]> 30
      <if test=" map != null">
		<if test=" map.projectName != null">
			and p.name = #{map.projectName}
		</if>
	 </if>
	 order by t.sort asc limit ${map.startRow}, ${map.pageSize}
  </select>
  <select id="selectForPaginTotalCount" resultType="java.lang.Integer" >
    select count(1) 
    from ic_project_notice as t left join ic_project as p on t.project_id = p.id
     where  t.status <![CDATA[<= ]]> 10 and t.del_flag > 0 and p.status <![CDATA[ < ]]> 30
    <if test=" map != null" >
        <if test=" map.projectName != null">
			and p.name = #{map.projectName}
		</if>
    </if>
  </select>
  
  <resultMap id="ProjectNoticeForFrontResultMap" type="ProjectNoticeForFront">
		<id column="id" property="id" jdbcType="BIGINT" />
		<id column="project_id" property="projectId" jdbcType="BIGINT" />
		<id column="name" property="name" jdbcType="VARCHAR" />
		<id column="thumbnail" property="thumbnail" jdbcType="VARCHAR" />
		<id column="online_time" property="onlineTime" jdbcType="TIMESTAMP" />
		<id column="sale_end_time" property="saleEndTime" jdbcType="TIMESTAMP" />
		<id column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<id column="start_date" property="startDate" jdbcType="TIMESTAMP" />
		<id column="end_date" property="endDate" jdbcType="TIMESTAMP" />
		<id column="interest_from" property="interestFrom" jdbcType="INTEGER" />
		<id column="project_type" property="projectType" jdbcType="VARCHAR" />
		<id column="min_annualized_rate" property="minAnnualizedRate" jdbcType="DECIMAL" />
		<id column="max_annualized_rate" property="maxAnnualizedRate" jdbcType="DECIMAL" />
		<id column="is_novice" property="isNovice" jdbcType="INTEGER" />
		<id column="join_lease" property="joinLease" jdbcType="INTEGER" />
		<id column="borrow_period" property="borrowPeriod" jdbcType="INTEGER" />
		<id column="activity_sign" property="activitySign" jdbcType="INTEGER" />
		<id column="borrow_period_type" property="borrowPeriodType" jdbcType="INTEGER" />
		<id column="invest_type" property="investType" jdbcType="INTEGER" />
		<id column="transfer_flag" property="transferFlag" jdbcType="INTEGER" />
  </resultMap>
  
  <select id="getProjectNoticeForFront" resultMap="ProjectNoticeForFrontResultMap">
  	select ipn.id, icp.id as projectId, icp.online_time,icp.start_date,icp.end_date,icp.sale_end_time,icp.total_amount,icp.interest_from, 
  	icp.min_annualized_rate,icp.max_annualized_rate,icp.name,icp.thumbnail,
  	icp.project_type,icp.is_novice,icp.join_lease,ifnull(ex.activity_sign, 0) as activity_sign,
  	icp.borrow_period,
  	icp.borrow_period_type,
  	icp.transfer_flag,
  	icp.invest_type
  	from ic_project_notice as ipn 
	INNER JOIN 
	ic_project as icp on ipn.project_id = icp.id
	LEFT JOIN ic_project_extra as ex on ipn.project_id = ex.project_id and ex.del_flag = 1
	where ipn.status = 10 and icp.status = 20 and ipn.del_flag = 1 and icp.del_flag = 1 and icp.package_flag = 0
	order by ipn.sort asc limit 0,#{num, jdbcType=INTEGER}
  </select>
  
  <select id="p2pGetProjectNoticeForFront" resultMap="ProjectNoticeForFrontResultMap">
  	select ipn.id, icp.id as projectId, icp.online_time,icp.start_date,icp.end_date,icp.sale_end_time,icp.total_amount,icp.interest_from, 
  	icp.min_annualized_rate,icp.max_annualized_rate,icp.name,icp.thumbnail,
  	icp.project_type,icp.is_novice,icp.join_lease 
  	from ic_project_notice as ipn 
	INNER JOIN 
	ic_project as icp on ipn.project_id = icp.id and icp.invest_type=1
	where ipn.status = 10 and icp.status = 20 and ipn.del_flag = 1 and icp.del_flag = 1 and icp.package_flag = 0
	order by ipn.sort asc limit 0,#{num, jdbcType=INTEGER}
  </select>
  
  <!--
  	查询即将预告的项目
  -->
  <select id="findUpcomingProjectNotice" resultMap="customResultMap">
  	select icp.name as project_name,icp.notice_notice,ipn.id, icp.id as projectId, icp.online_time from ic_project_notice as ipn 
	INNER JOIN 
	ic_project as icp on ipn.project_id = icp.id
	where ipn.status = 1 and icp.status = 20 and ipn.del_flag = 1 and icp.package_flag = 0 and icp.del_flag = 1 and start_time <![CDATA[<= ]]> now()
	order by ipn.sort asc 
  </select>
  
  
  <sql id="Base_Column_List_Marked" >
    ic.id, ic.project_id, ic.start_time, ic.end_time, ic.sort, ic.status, ic.notice_message, ic.create_time, 
    ic.update_time, ic.remarks, ic.del_flag,ic.index_show
  </sql>
  
  <!-- 根据排序规则获得预告中的项目 -->
  <select id="getSortFirstProjectNotice" resultMap="BaseResultMap">
  	 select 
     <include refid="Base_Column_List_Marked" />
     from ic_project_notice as ic
     INNER JOIN 
	ic_project as icp on ic.project_id = icp.id 
     where ic.status = 10 and ic.del_flag = 1 and icp.package_flag = 0 order by sort asc limit 1
  </select>
  
  <!-- 根据排序规则获得预告中的项目 -->
  <select id="p2pGetSortFirstProjectNotice" resultMap="BaseResultMap">
  	 select 
     <include refid="Base_Column_List_Marked" />
     from ic_project_notice as ic
     INNER JOIN 
	ic_project as icp on ic.project_id = icp.id 
     where ic.status = 10 and ic.del_flag = 1 and icp.package_flag = 0 and icp.invest_type=1   order by sort asc limit 1
  </select>
  
  
</mapper>