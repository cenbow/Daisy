<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yourong.core.ic.dao.ProjectPackageLinkMapper" >
  <resultMap id="BaseResultMap" type="com.yourong.core.ic.model.ProjectPackageLink" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="project_package_id" property="projectPackageId" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap type="com.yourong.core.ic.model.ProjectPackageBiz" id="BaseProjectPackageBizMap">
        <id column="id" property="id" jdbcType="BIGINT" />
        <id column="project_package_id" property="projectPackageId" jdbcType="BIGINT" />
        <id column="project_id" property="projectId" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="profit_type" property="profitType" jdbcType="VARCHAR" />
		<result column="original_project_number" property="originalProjectNumber" jdbcType="VARCHAR" />
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="borrowerName" property="borrowerName" jdbcType="VARCHAR" />
		<result column="annualized_rate_type" property="annualizedRateType" jdbcType="INTEGER" />
	    <result column="borrow_period" property="borrowPeriod" jdbcType="INTEGER" />
        <result column="online_time" property="onlineTime" jdbcType="TIMESTAMP" />
        <result column="sale_end_time" property="saleEndTime" jdbcType="TIMESTAMP" />
        <result column="sale_complated_time" property="saleComplatedTime" jdbcType="TIMESTAMP" />
        <result column="surplus_amount" property="surplusAmount" jdbcType="DECIMAL" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="borrow_period_type" property="borrowPeriodType" jdbcType="INTEGER" />
        <result column="interest_from" property="interestFrom" jdbcType="INTEGER" />
        <result column="annualized_rate" property="annualizedRate" jdbcType="INTEGER" />        
  </resultMap>

  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, project_package_id, project_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from ic_project_package_link
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ic_project_package_link
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yourong.core.ic.model.ProjectPackageLink" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ic_project_package_link (id, project_package_id, project_id
      )
    values (#{id,jdbcType=BIGINT}, #{projectPackageId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yourong.core.ic.model.ProjectPackageLink" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ic_project_package_link
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectPackageId != null" >
        project_package_id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectPackageId != null" >
        #{projectPackageId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yourong.core.ic.model.ProjectPackageLink" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ic_project_package_link
    <set >
      <if test="projectPackageId != null" >
        project_package_id = #{projectPackageId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yourong.core.ic.model.ProjectPackageLink" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ic_project_package_link
    set project_package_id = #{projectPackageId,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id ="selectProjectPackageBizCount" resultType="java.lang.Integer" >
       SELECT
		  count(1)
		FROM
			ic_project p,ic_project_package_link b,uc_member m where 
		      m.id =p.borrower_id AND p.id=b.project_id and p.status in (20,30,40,50)
		      and b.project_package_id=#{map.projectPackageId}
  </select>
  <select id ="selectProjectPackageBiz" resultMap="BaseProjectPackageBizMap"  >
       SELECT
		  b.id,
		  b.project_id,
		  b.project_package_id,
		  p.name,
		  p.profit_type,
		  p.total_amount,
		  p.borrower_id,
		  p.original_project_number,
		  m.true_name borrowerName,
		  p.annualized_rate_type,
		  p.borrow_period,
		  p.online_time,
		  p.sale_end_time,
		  p.borrow_period_type,
		  (select f.balance from fin_balance f where f.balance_type=4 and f.source_id=p.id) surplus_amount ,
		  p.sale_complated_time,
		  p.interest_from,
		  p.status
		FROM
			ic_project p,ic_project_package_link b,uc_member m where 
		      m.id =p.borrower_id AND p.id=b.project_id and p.status in (20,30,40,50)
		       order by b.id  LIMIT ${map.startRow}, ${map.pageSize}
  </select>
  <select id="findProjectByPackage" parameterType="java.lang.Long" resultType="java.lang.Integer">
      select count(1) from  ic_project_package_link p where p.project_id = #{projectId}
  </select>
  <delete id="batchDelete" parameterType="java.lang.Long" >
    delete from ic_project_package_link
    where project_package_id in  <foreach collection="ids" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach>  
  </delete>
  <select id="selectAllProjectPackageBiz" resultMap="BaseProjectPackageBizMap" parameterType="java.lang.Long" >
       SELECT
		  b.id,
		  b.project_id,
		  b.project_package_id,
		  p.name,
		  p.profit_type,
		  p.total_amount,
		  p.borrower_id,
		  p.original_project_number,
		  m.true_name borrowerName,
		  p.annualized_rate_type,
		  p.borrow_period,
		  p.online_time,
		  p.sale_end_time,
		  p.annualized_rate,
		  p.borrow_period_type,
		  (select f.balance from fin_balance f where f.balance_type=4 and f.source_id=p.id) surplus_amount ,
		  p.sale_complated_time,
		  p.interest_from,
		  p.status
		FROM
			ic_project p,ic_project_package_link b,uc_member m where 
		      m.id =p.borrower_id AND p.id=b.project_id and p.status in (20,30,50)
		      and b.project_package_id=#{map.projectPackageId}
		      order by b.id
   </select>
   <delete id="deleteProjectFromPackage" parameterType="java.lang.Long">
       delete from ic_project_package_link where project_package_id = #{projectPackageId}
   </delete>
   
   <select id="selectByPackageList" resultMap="BaseResultMap" parameterType="java.lang.Long" >
	    select 
	    <include refid="Base_Column_List" />
	    from ic_project_package_link
	    where project_package_id = #{projectPackageId,jdbcType=BIGINT}
  </select>
  <select id="getProjectPackageByProjectId" resultMap="BaseResultMap">
     select project_package_id from ic_project_package_link where project_id =#{projectId} GROUP BY project_package_id
  </select>
  <select id="countPackageLinkProject" resultType="java.lang.Integer">
      select count(1) from ic_project_package_link where project_id =#{projectId}
      <if test="projectPackageId !=null">
         and project_package_id !=#{projectPackageId}
      </if>
  </select>
</mapper>