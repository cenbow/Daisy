<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yourong.core.ic.dao.LeaseBonusDetailMapper" >
  <resultMap id="BaseResultMap" type="com.yourong.core.ic.model.LeaseBonusDetail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="lease_bonus_id" property="leaseBonusId" jdbcType="BIGINT" />
    <result column="lease_detail_id" property="leaseDetailId" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="transaction_id" property="transactionId" jdbcType="BIGINT" />
    <result column="sina_collect_no" property="sinaCollectNo" jdbcType="VARCHAR" />
    <result column="sina_pay_no" property="sinaPayNo" jdbcType="VARCHAR" />
    <result column="bonus_amount" property="bonusAmount" jdbcType="DECIMAL" />
    <result column="bonus_rate" property="bonusRate" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.yourong.core.ic.model.LeaseBonusDetail" id="BizResultMap" extends="BaseResultMap">
  	<result column="username" property="username" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="BIGINT" />
    <result column="avatars" property="avatars" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, lease_bonus_id, lease_detail_id, project_id, member_id, transaction_id, sina_collect_no, sina_pay_no, 
    bonus_amount, bonus_rate, create_time, update_time, del_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ic_lease_bonus_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ic_lease_bonus_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yourong.core.ic.model.LeaseBonusDetail" useGeneratedKeys="true" keyProperty="id">
    insert into ic_lease_bonus_detail ( lease_bonus_id, lease_detail_id, project_id, 
      member_id, transaction_id, sina_collect_no, 
      sina_pay_no, bonus_amount, bonus_rate, create_time, 
      update_time, del_flag)
    values (#{leaseBonusId,jdbcType=BIGINT}, #{leaseDetailId,jdbcType=BIGINT},
      #{projectId,jdbcType=BIGINT}, 
      #{memberId,jdbcType=BIGINT}, #{transactionId,jdbcType=BIGINT}, #{sinaCollectNo,jdbcType=VARCHAR}, 
      #{sinaPayNo,jdbcType=VARCHAR}, #{bonusAmount,jdbcType=DECIMAL}, #{bonusRate,jdbcType=DECIMAL}, now(), 
      now(), #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yourong.core.ic.model.LeaseBonusDetail" >
    insert into ic_lease_bonus_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="leaseBonusId != null" >
        lease_bonus_id,
      </if>
      <if test="leaseDetailId != null" >
        lease_detail_id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="transactionId != null" >
        transaction_id,
      </if>
      <if test="sinaCollectNo != null" >
        sina_collect_no,
      </if>
      <if test="sinaPayNo != null" >
        sina_pay_no,
      </if>
      <if test="bonusAmount != null" >
        bonus_amount,
      </if>
      <if test="bonusRate != null" >
        bonus_rate,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="leaseBonusId != null" >
        #{leaseBonusId,jdbcType=BIGINT},
      </if>
      <if test="leaseDetailId != null" >
        #{leaseDetailId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="transactionId != null" >
        #{transactionId,jdbcType=BIGINT},
      </if>
      <if test="sinaCollectNo != null" >
        #{sinaCollectNo,jdbcType=VARCHAR},
      </if>
      <if test="sinaPayNo != null" >
        #{sinaPayNo,jdbcType=VARCHAR},
      </if>
      <if test="bonusAmount != null" >
        #{bonusAmount,jdbcType=DECIMAL},
      </if>
      <if test="bonusRate != null" >
        #{bonusRate,jdbcType=DECIMAL},
      </if>
      now(),
      now(),
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yourong.core.ic.model.LeaseBonusDetail" >
    update ic_lease_bonus_detail
    <set >
      <if test="leaseBonusId != null" >
        lease_bonus_id = #{leaseBonusId,jdbcType=BIGINT},
      </if>
      <if test="leaseDetailId != null" >
        #{leaseDetailId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="transactionId != null" >
        transaction_id = #{transactionId,jdbcType=BIGINT},
      </if>
      <if test="sinaCollectNo != null" >
        sina_collect_no = #{sinaCollectNo,jdbcType=VARCHAR},
      </if>
      <if test="sinaPayNo != null" >
        sina_pay_no = #{sinaPayNo,jdbcType=VARCHAR},
      </if>
      <if test="bonusAmount != null" >
        bonus_amount = #{bonusAmount,jdbcType=DECIMAL},
      </if>
      <if test="bonusRate != null" >
        #{bonusRate,jdbcType=DECIMAL},
      </if>
        update_time = now(),
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yourong.core.ic.model.LeaseBonusDetail" >
    update ic_lease_bonus_detail
    set lease_bonus_id = #{leaseBonusId,jdbcType=BIGINT},
      lease_detail_id = #{leaseDetailId,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT},
      member_id = #{memberId,jdbcType=BIGINT},
      transaction_id = #{transactionId,jdbcType=BIGINT},
      sina_collect_no = #{sinaCollectNo,jdbcType=VARCHAR},
      sina_pay_no = #{sinaPayNo,jdbcType=VARCHAR},
      bonus_amount = #{bonusAmount,jdbcType=DECIMAL},
      bonus_rate = #{bonusRate,jdbcType=DECIMAL},
      update_time = now(),
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="batchDelete" parameterType="java.lang.Long" >
    delete from ic_lease_bonus_detail
    where id in  <foreach collection="ids" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach>  
  </delete>
  <select id="findByPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from ic_lease_bonus_detail
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = #{map.id}
        </if>
        <if test=" map.leaseBonusId != null" >
          lease_bonus_id = #{map.leaseBonusId}
        </if>
        <if test=" map.leaseDetailId != null" >
          lease_detail_id = #{map.leaseDetailId}
        </if>
        <if test=" map.projectId != null" >
          project_id = #{map.projectId}
        </if>
        <if test=" map.memberId != null" >
          member_id = #{map.memberId}
        </if>
        <if test=" map.transactionId != null" >
          transaction_id = #{map.transactionId}
        </if>
        <if test=" map.sinaCollectNo != null" >
          sina_collect_no = #{map.sinaCollectNo}
        </if>
        <if test=" map.sinaPayNo != null" >
          sina_pay_no = #{map.sinaPayNo}
        </if>
        <if test=" map.bonusAmount != null" >
          bonus_amount = #{map.bonusAmount}
        </if>
        <if test=" map.bonusRate != null" >
          bonus_rate = #{map.bonusRate}
        </if>
        <if test=" map.createTime != null" >
          create_time = #{map.createTime}
        </if>
        <if test=" map.updateTime != null" >
          update_time = #{map.updateTime}
        </if>
        <if test=" map.delFlag != null" >
          del_flag = #{map.delFlag}
        </if>
      </where>
    </if>
  </select>
  <sql id="Base_Column_List_Pagin" >
    t.id  as  id,
t.lease_bonus_id  as  lease_bonus_id,
t.lease_detail_id  as  lease_detail_id,
t.project_id  as  project_id,
t.member_id  as  member_id,
t.transaction_id  as  transaction_id,
t.sina_collect_no  as  sina_collect_no,
t.sina_pay_no  as  sina_pay_no,
t.bonus_amount  as  bonus_amount,
t.bonus_rate  as  bonus_rate,
t.create_time  as  create_time,
t.update_time  as  update_time,
t.del_flag  as  del_flag
  </sql>
  <select id="selectForPagin" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List_Pagin" />
    from  (SELECT id FROM  ic_lease_bonus_detail
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = #{map.id}
        </if>
        <if test=" map.leaseBonusId != null" >
          lease_bonus_id = #{map.leaseBonusId}
        </if>
        <if test=" map.leaseDetailId != null" >
          lease_detail_id = #{map.leaseDetailId}
        </if>
        <if test=" map.projectId != null" >
          project_id = #{map.projectId}
        </if>
        <if test=" map.memberId != null" >
          member_id = #{map.memberId}
        </if>
        <if test=" map.transactionId != null" >
          transaction_id = #{map.transactionId}
        </if>
        <if test=" map.sinaCollectNo != null" >
          sina_collect_no = #{map.sinaCollectNo}
        </if>
        <if test=" map.sinaPayNo != null" >
          sina_pay_no = #{map.sinaPayNo}
        </if>
        <if test=" map.bonusAmount != null" >
          bonus_amount = #{map.bonusAmount}
        </if>
        <if test=" map.bonusRate != null" >
          bonus_rate = #{map.bonusRate}
        </if>
        <if test=" map.createTime != null" >
          create_time = #{map.createTime}
        </if>
        <if test=" map.updateTime != null" >
          update_time = #{map.updateTime}
        </if>
        <if test=" map.delFlag != null" >
          del_flag = #{map.delFlag}
        </if>
      </where>
    </if>
      LIMIT	${map.startRow}, ${map.pageSize}  )  AS a,  ic_lease_bonus_detail AS t FORCE INDEX(PRIMARY) WHERE a.id = t.id   
  </select>
  <select id="selectForPaginTotalCount" resultType="java.lang.Integer" >
    select count(1) 
    from ic_lease_bonus_detail
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = ${map.id}
        </if>
        <if test=" map.leaseBonusId != null" >
          lease_bonus_id = ${map.leaseBonusId}
        </if>
        <if test=" map.leaseDetailId != null" >
          lease_detail_id = ${map.leaseDetailId}
        </if>
        <if test=" map.projectId != null" >
          project_id = ${map.projectId}
        </if>
        <if test=" map.memberId != null" >
          member_id = ${map.memberId}
        </if>
        <if test=" map.transactionId != null" >
          transaction_id = ${map.transactionId}
        </if>
        <if test=" map.sinaCollectNo != null" >
          sina_collect_no = ${map.sinaCollectNo}
        </if>
        <if test=" map.sinaPayNo != null" >
          sina_pay_no = ${map.sinaPayNo}
        </if>
        <if test=" map.bonusAmount != null" >
          bonus_amount = ${map.bonusAmount}
        </if>
        <if test=" map.bonusRate != null" >
          bonus_rate = ${map.bonusRate}
        </if>
        <if test=" map.createTime != null" >
          create_time = ${map.createTime}
        </if>
        <if test=" map.updateTime != null" >
          update_time = ${map.updateTime}
        </if>
        <if test=" map.delFlag != null" >
          del_flag = ${map.delFlag}
        </if>
      </where>
    </if>
  </select>
  
  <!-- 项目租赁分红详情  start -->
  <!-- 根据项目id分页获取项目分红记录 -->
  <select id="selectBonusDetailByProjectIdForPagin" resultMap="BizResultMap">
  	SELECT
  		t.member_id as member_id,
		t.bonus_amount as bonus_amount,
		a.avatars as avatars,
		a.mobile as mobile,
		a.username as username
	FROM (select lbd.id,m.avatars as avatars,
		m.mobile as mobile,
		m.username as username from ic_lease_bonus_detail AS lbd
	LEFT JOIN uc_member AS m ON lbd.member_id = m.id where lbd.lease_detail_id = #{leaseBonusDetailQuery.leaseDetailId,jdbcType=BIGINT} and lbd.bonus_amount>0 order by lbd.bonus_amount desc
	LIMIT	#{leaseBonusDetailQuery.startRow},  #{leaseBonusDetailQuery.pageSize}) AS a,  ic_lease_bonus_detail AS t FORCE INDEX(PRIMARY) WHERE a.id = t.id   
  </select>
  
  <select id="selectCountByProjectIdForPagin" resultType="java.lang.Integer" >
  	select count(1) 
    from ic_lease_bonus_detail where lease_detail_id = #{leaseBonusDetailQuery.leaseDetailId,jdbcType=BIGINT}
  </select>
  <!-- 项目分红详情  end -->
  
  <!-- 根据交易ID获取分红明细 -->
  <select id="findListByTransactionId" resultMap="BaseResultMap">
  	SELECT
  		bonus_amount,create_time
	FROM
		ic_lease_bonus_detail
	WHERE
		transaction_id = #{transactionId,jdbcType=BIGINT}
	AND del_flag > 0 and bonus_amount>0
  </select>
  
  <!-- 根据交易ID获取总收益 -->
  <select id="getLeaseTotalIncomeByTransactionId" resultMap="BaseResultMap">
  	SELECT
		sum(bonus_amount) AS bonus_amount,
		sum(bonus_rate) AS bonus_rate
	FROM
		ic_lease_bonus_detail as d LEFT JOIN ic_lease_detail as l on l.id = d.lease_detail_id
	WHERE
		transaction_id = #{transactionId,jdbcType=BIGINT} and l.bonus_status = 2
  </select>
</mapper>