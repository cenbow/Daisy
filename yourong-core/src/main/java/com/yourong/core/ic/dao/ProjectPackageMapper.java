package com.yourong.core.ic.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.yourong.core.ic.model.ProjectPackage;
import com.yourong.core.ic.model.ProjectPackageLinkModel;
import com.yourong.core.ic.model.query.ProjectQuery;
import com.yourong.core.ic.model.ProjectPackageExample;

public interface ProjectPackageMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ic_project_package
	 * @mbggenerated
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ic_project_package
	 * @mbggenerated
	 */
	int insert(ProjectPackage record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ic_project_package
	 * @mbggenerated
	 */
	int insertSelective(ProjectPackage record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ic_project_package
	 * @mbggenerated
	 */
	List<ProjectPackage> selectByExample(ProjectPackageExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ic_project_package
	 * @mbggenerated
	 */
	ProjectPackage selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ic_project_package
	 * @mbggenerated
	 */
	int updateByPrimaryKeySelective(ProjectPackage record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ic_project_package
	 * @mbggenerated
	 */
	int updateByPrimaryKey(ProjectPackage record);

	/**
	 * 获取资产包列�?
	 * @return
	 */
	List<ProjectPackage> getProjectPackageList(@Param("map")Map<String, Object> map);
	
	/**
	 * 获取资产包列�?
	 * @return
	 */
	int countProjectPackageList(@Param("map")Map<String, Object> map);
	
	/**
     * 删除资产包的xiangm
     * @param record
     * @return
     */
    
    int batchDelete(@Param("ids") long[] id_array);
    /**
     * 获取资产包里的项目列�?
     * @param projectPackageId
     * @return
     */
    List<ProjectPackageLinkModel> getProjectPackageModelList(@Param("projectPackageId")Long projectPackageId);
    /**
     * 获取�?��进度资产�?
     * @return
     */
    ProjectPackage getMaxProgressModel();
    /**
     * 首页获取资产包数�?
     * @param projectQuery
     * @return
     */
    int getProjectPackageCount(@Param("projectQuery") ProjectQuery projectQuery);
    /**
     * 首页资产包数�?
     * @param projectQuery
     * @return
     */
    List<ProjectPackage> getProjectList(@Param("projectQuery")ProjectQuery projectQuery);
    /**
     * 
     * @param projectQuery
     * @return
     */
    List<ProjectPackage> getProjectListCompleted(@Param("projectQuery")ProjectQuery projectQuery); 
    /**
     * 获取不分页的资产包列�?
     * @param status
     * @return
     */
    List<ProjectPackage> getAllProjectPackageList(@Param("status")Integer status);
    
    
    /**
     * app获取资产包项目列�?
     * @param projectQuery
     * @return
     */
    List<ProjectPackageLinkModel> getAppProjectPackageModelList(@Param("projectPackageId")Long projectPackageId);
    
    /**
     * 获取资产包列�?
     * @param status
     * @return
     */
    List<ProjectPackage> getCompletedProjectPackageList(@Param("status")String status,@Param("startRow")Integer startRow,@Param("pageSize")Integer pageSize);
    /**
     * 获取资产包列表数�?
     * @param status
     * @return
     */
    int countAllProjectPackage(@Param("status")String status);

	/**
	 * 获取资产包列表数�?
	 * @param status
	 * @return
	 */
	List<ProjectPackage> selectCompletedProjectPackageList();
}