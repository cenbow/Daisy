<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yourong.core.fin.dao.OverdueRepayLogMapper" >
  <resultMap id="BaseResultMap" type="com.yourong.core.fin.model.OverdueRepayLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="repay_date" property="repayDate" jdbcType="TIMESTAMP" />
    <result column="unreturn_principal" property="unreturnPrincipal" jdbcType="DECIMAL" />
    <result column="unreturn_interest" property="unreturnInterest" jdbcType="DECIMAL" />
    <result column="overdue_day" property="overdueDay" jdbcType="INTEGER" />
    <result column="overdue_principal" property="overduePrincipal" jdbcType="DECIMAL" />
    <result column="overdue_interest" property="overdueInterest" jdbcType="DECIMAL" />
    <result column="overdue_fine" property="overdueFine" jdbcType="DECIMAL" />
    <result column="breach_amount" property="breachAmount" jdbcType="DECIMAL" />
    <result column="payable_amount" property="payableAmount" jdbcType="DECIMAL" />
    <result column="realpay_amount" property="realpayAmount" jdbcType="DECIMAL" />
    <result column="overdue_id" property="overdueId" jdbcType="VARCHAR" />
    <result column="interest_periods" property="interestPeriods" jdbcType="VARCHAR" />
    <result column="repay_type" property="repayType" jdbcType="INTEGER" />
    <result column="repay_status" property="repayStatus" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="repay_time" property="repayTime" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="overdue_start_date" property="overdueStartDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, repay_date, unreturn_principal,unreturn_interest, overdue_day, overdue_principal, overdue_interest,
    overdue_fine, breach_amount, payable_amount, realpay_amount, overdue_id, interest_periods, repay_type, repay_status,type,
    repay_time, remarks, update_time, create_time, del_flag ,overdue_start_date 
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_repay_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from fin_overdue_repay_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="com.yourong.core.fin.model.OverdueRepayLog" useGeneratedKeys="true" keyProperty="id">
    insert into fin_overdue_repay_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="overdueStartDate != null" >
        overdue_start_date,
      </if>
      <if test="repayDate != null" >
        repay_date,
      </if>
      <if test="unreturnPrincipal != null" >
        unreturn_principal,
      </if>
      <if test="unreturnInterest != null" >
        unreturn_interest,
      </if>
      <if test="overdueDay != null" >
        overdue_day,
      </if>
      <if test="overduePrincipal != null" >
        overdue_principal,
      </if>
      <if test="overdueInterest != null" >
        overdue_interest,
      </if>
      <if test="overdueFine != null" >
        overdue_fine,
      </if>
      <if test="breachAmount != null" >
        breach_amount,
      </if>
      <if test="payableAmount != null" >
        payable_amount,
      </if>
      <if test="realpayAmount != null" >
        realpay_amount,
      </if>
      <if test="overdueId != null" >
        overdue_id,
      </if>
      <if test="interestPeriods != null" >
        interest_periods,
      </if>
      <if test="repayType != null" >
        repay_type,
      </if>
       <if test="repayStatus != null" >
        repay_status,
      </if>
       <if test="type != null" >
        type,
      </if>
       <if test="repayTime != null" >
        repay_time,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
        update_time,
        create_time,
        del_flag,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="overdueStartDate != null" >
        #{overdueStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="repayDate != null" >
        #{repayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unreturnPrincipal != null" >
        #{unreturnPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="unreturnInterest != null" >
        #{unreturnInterest,jdbcType=DECIMAL},
      </if>
      <if test="overdueDay != null" >
        #{overdueDay,jdbcType=INTEGER},
      </if>
      <if test="overduePrincipal != null" >
        #{overduePrincipal,jdbcType=DECIMAL},
      </if>
      <if test="overdueInterest != null" >
        #{overdueInterest,jdbcType=DECIMAL},
      </if>
      <if test="overdueFine != null" >
        #{overdueFine,jdbcType=DECIMAL},
      </if>
      <if test="breachAmount != null" >
        #{breachAmount,jdbcType=DECIMAL},
      </if>
      <if test="payableAmount != null" >
        #{payableAmount,jdbcType=DECIMAL},
      </if>
      <if test="realpayAmount != null" >
        #{realpayAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueId != null" >
        #{overdueId,jdbcType=VARCHAR},
      </if>
      <if test="interestPeriods != null" >
        #{interestPeriods,jdbcType=VARCHAR},
      </if>
      <if test="repayType != null" >
        #{repayType,jdbcType=INTEGER},
      </if>
      <if test="repayStatus != null" >
        #{repayStatus,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="repayTime != null" >
        #{repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      	NOW(),
      	NOW(),
       1,
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yourong.core.fin.model.OverdueRepayLog" >
    update fin_overdue_repay_log
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="overdueStartDate != null" >
        overdue_start_date = #{overdueStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="repayDate != null" >
        repay_date = #{repayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unreturnPrincipal != null" >
        unreturn_principal = #{unreturnPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="unreturnInterest != null" >
        unreturn_interest = #{unreturnInterest,jdbcType=DECIMAL},
      </if>
      <if test="overdueDay != null" >
        overdue_day = #{overdueDay,jdbcType=TIMESTAMP},
      </if>
      <if test="overduePrincipal != null" >
        overdue_principal = #{overduePrincipal,jdbcType=DECIMAL},
      </if>
      <if test="overdueInterest != null" >
        overdue_interest = #{overdueInterest,jdbcType=DECIMAL},
      </if>
      <if test="overdueFine != null" >
        overdue_fine = #{overdueFine,jdbcType=DECIMAL},
      </if>
      <if test="breachAmount != null" >
        breach_amount = #{breachAmount,jdbcType=DECIMAL},
      </if>
      <if test="payableAmount != null" >
        payable_amount = #{payableAmount,jdbcType=DECIMAL},
      </if>
      <if test="realpayAmount != null" >
        realpay_amount = #{realpayAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueId != null" >
        overdue_id = #{overdueId,jdbcType=VARCHAR},
      </if>
      <if test="interestPeriods != null" >
        interest_periods = #{interestPeriods,jdbcType=VARCHAR},
      </if>
      <if test="repayType != null" >
        repay_type = #{repayType,jdbcType=INTEGER},
      </if>
      <if test="repayStatus != null" >
        repay_status = #{repayStatus,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="repayTime != null" >
        repay_time = #{repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
        update_time = now(),
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yourong.core.fin.model.OverdueRepayLog" >
    update fin_overdue_repay_log
    set 
      underwrite_id = #{underwriteId,jdbcType=BIGINT},
      overdue_principal = #{overduePrincipal,jdbcType=DECIMAL},
      overdue_interest = #{overdueInterest,jdbcType=DECIMAL},
      overdue_day = #{overdueDay,jdbcType=INTEGER},
      overdue_fine = #{overdueFine,jdbcType=DECIMAL},
      breach_amount = #{breachAmount,jdbcType=DECIMAL},
      refund_type = #{refundType,jdbcType=INTEGER},
      payable_amount = #{payableAmount,jdbcType=DECIMAL},
      realpay_amount = #{realpayAmount,jdbcType=DECIMAL},
      overdue_state = #{overdueState,jdbcType=INTEGER},
      refund_time = #{refundTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 通过projectid 查询逾期还款记录 -->
  <select id="getOverdueRepayLogRecordByProjectId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_repay_log
    where project_id = #{projectId,jdbcType=BIGINT}
    and type=1
  </select>
  <!-- 统计逾期还款记录数 -->
   <select id="countOverdueRepayLogByProjectId" resultType="java.lang.Integer">
  	select  count(1) from fin_overdue_repay_log
    where del_flag>0  and  project_id =  #{projectId,jdbcType=BIGINT} 
  </select>
  
  <!-- 更新逾期还款状态，根据逾期记录id -->
  <update id="updateStatusByOverdueId">
  	update fin_overdue_repay_log 
  	set repay_status = #{afterStatus,jdbcType=INTEGER},update_time = now()
  	where FIND_IN_SET(#{overdueId,jdbcType=BIGINT},overdue_id) 
  	and repay_status = #{beforeStatus,jdbcType=INTEGER}
  	order by id 
  	limit 1
  </update>
  
  <!-- 更新逾期还款状态，根据主键 -->
  <update id="updateStatusById">
  	update fin_overdue_repay_log 
  	set repay_status = #{afterStatus,jdbcType=INTEGER},update_time = now()
  	where id = #{id,jdbcType=BIGINT} 
  	and del_flag>0
  	and repay_status = #{beforeStatus,jdbcType=INTEGER}
  </update>
  <!-- 根据项目id查询普通逾期结算 -->
  <select id="getRepayLogByProjectId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_repay_log
    where project_id = #{projectId,jdbcType=BIGINT} and type=2  and repay_status =3 and del_flag>0  order by overdue_start_date desc
  </select>
  <!-- 查询催收中的结算记录 -->
    <select id="getRepayLogByProjectIdCollect" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_repay_log
    where project_id = #{projectId,jdbcType=BIGINT} and type=2 and repay_status in (1,2,4) and del_flag>0 order by overdue_start_date desc limit 1
  </select>
  <!-- 查询逾期记录 -->
  <select id="getOverdueRepayLogRecordByProjectIdAndType" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_repay_log
    where project_id = #{projectId,jdbcType=BIGINT} and  type= #{type,jdbcType=INTEGER}
  </select>
    <!-- 统计逾期还款记录数 -->
   <select id="countOverdueRepayLogByProjectIdAndtype" resultType="java.lang.Integer">
  	select  count(1) from fin_overdue_repay_log
    where del_flag>0  and  project_id =  #{projectId,jdbcType=BIGINT} and  type= #{type,jdbcType=INTEGER} 
  </select>
  <!-- 统计滞纳金 -->
  <select id="totalOverdueFine" resultType="java.math.BigDecimal">
       select sum(overdue_fine) as overdue_fine from fin_overdue_repay_log where project_id = #{projectId,jdbcType=BIGINT}  
  </select>
  
  <!-- 查询未还款的普通逾期结算记录 -->
  <select id="getOverdueRepayByStatus"  resultMap="BaseResultMap" >
  	select <include refid="Base_Column_List" />
  	from fin_overdue_repay_log 
  	where repay_status = 1 and type = 2 and project_id = #{projectId,jdbcType=BIGINT} and del_flag>0 order by overdue_start_date desc  limit 1
  </select>
  
  <select id="getForLock" resultMap="BaseResultMap" >
  	select 
  	<include refid="Base_Column_List" />
  	from fin_overdue_repay_log
  	where id = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 查询逾期结算记录下是否存在未还款的逾期记录 -->
  <select id="getUnreturnCountByOverdueRepayId" resultType="java.lang.Integer"> 
  	select count(1) from fin_overdue_log 
  	where overdue_repay_id = #{overdueRepayId,jdbcType=BIGINT} and status != 2
  </select>
  
  
  <select id="getCommonOverdueRepayLogRecord" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_repay_log
    where project_id = #{projectId,jdbcType=BIGINT} and  type= 2  and repay_status in (3,2) 
  </select>

  <select id="queryOverdueCountByBorrowerId" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM fin_overdue_repay_log o LEFT JOIN (SELECT p.id FROM ic_project p LEFT JOIN ic_debt d ON p.debt_id=d.id WHERE d.lender_id=#{borrowerId} AND p.invest_type=1
		UNION
		SELECT id FROM ic_project WHERE borrower_id=#{borrowerId} AND invest_type=2) p ON o.project_id=p.id WHERE o.repay_status=1 AND p.id IS NOT NULL
  </select>

  <select id="queryOverdueAmountByBorrowerId" resultType="java.util.HashMap">
      SELECT SUM(overdue_principal),SUM(overdue_interest) FROM fin_overdue_repay_log o LEFT JOIN (SELECT p.id FROM ic_project p LEFT JOIN ic_debt d ON p.debt_id=d.id WHERE d.lender_id=#{borrowerId} AND p.invest_type=1
		UNION
		SELECT id FROM ic_project WHERE borrower_id=#{borrowerId} AND invest_type=2) p ON o.project_id=p.id WHERE o.repay_status=1 AND p.id IS NOT NULL
  </select>
</mapper>