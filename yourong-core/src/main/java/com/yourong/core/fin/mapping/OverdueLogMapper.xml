<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yourong.core.fin.dao.OverdueLogMapper" >
  <resultMap id="BaseResultMap" type="com.yourong.core.fin.model.OverdueLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="overdue_repay_id" property="overdueRepayId" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="interest_id" property="interestId" jdbcType="BIGINT" />
    <result column="underwrite_id" property="underwriteId" jdbcType="BIGINT" />
    <result column="underwrite_member_id" property="underwriteMemberId" jdbcType="BIGINT" />
    <result column="overdue_principal" property="overduePrincipal" jdbcType="DECIMAL" />
    <result column="overdue_interest" property="overdueInterest" jdbcType="DECIMAL" />
    <result column="overdue_fine" property="overdueFine" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, overdue_repay_id, project_id, interest_id,underwrite_id,underwrite_member_id,overdue_principal,overdue_interest,overdue_fine,status,start_date,end_date
    , remarks, update_time, create_time, del_flag ,type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from fin_overdue_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yourong.core.fin.model.OverdueLog" >
    insert into fin_overdue_log (id, overdue_repay_id, project_id,interest_id, underwrite_id, underwrite_member_id,
      overdue_principal, overdue_interest, 
      overdue_fine, status,start_date,end_date,
      remarks, update_time, 
      create_time, del_flag)
    values (#{id,jdbcType=BIGINT}, #{overdueRepayId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{interestId,jdbcType=BIGINT},#{underwriteId,jdbcType=BIGINT}, 
      #{underwriteMemberId,jdbcType=BIGINT},#{overduePrincipal,jdbcType=DECIMAL}, #{overdueInterest,jdbcType=DECIMAL},
      #{overdueFine,jdbcType=DECIMAL},#{status,jdbcType=INTEGER}, #{startDate,jdbcType=TIMESTAMP},#{endDate,jdbcType=TIMESTAMP},
      #{remarks,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yourong.core.fin.model.OverdueLog"  useGeneratedKeys="true" keyProperty="id"  >
    insert into fin_overdue_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="overdueRepayId != null" >
        overdue_repay_id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="interestId != null" >
        interest_id,
      </if>
      <if test="underwriteId != null" >
        underwrite_id,
      </if>
       <if test="underwriteMemberId != null" >
        underwrite_member_id,
      </if>
      <if test="overduePrincipal != null" >
        overdue_principal,
      </if>
      <if test="overdueInterest != null" >
        overdue_interest,
      </if>
      <if test="overdueFine != null" >
        overdue_fine,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
        update_time,
        create_time,
        del_flag,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="overdueRepayId != null" >
        #{overdueRepayId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
       <if test="interestId != null" >
        #{interestId,jdbcType=BIGINT},
      </if>
      <if test="underwriteId != null" >
        #{underwriteId,jdbcType=BIGINT},
      </if>
       <if test="underwriteMemberId != null" >
        #{underwriteMemberId,jdbcType=BIGINT},
      </if>
      <if test="overduePrincipal != null" >
        #{overduePrincipal,jdbcType=DECIMAL},
      </if>
      <if test="overdueInterest != null" >
        #{overdueInterest,jdbcType=DECIMAL},
      </if>
      <if test="overdueFine != null" >
        #{overdueFine,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
       <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
        now(),
        now(),
        1,
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yourong.core.fin.model.OverdueLog" >
    update fin_overdue_log
    <set >
   	 <if test="overdueRepayId != null" >
        overdue_repay_id = #{overdueRepayId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
       <if test="interestId != null" >
        interest_id = #{interestId,jdbcType=BIGINT},
      </if>
      <if test="underwriteId != null" >
        underwrite_id = #{underwriteId,jdbcType=BIGINT},
      </if>
       <if test="underwriteMemberId != null" >
        underwrite_member_id = #{underwriteMemberId,jdbcType=BIGINT},
      </if>
      <if test="overduePrincipal != null" >
        overdue_principal = #{overduePrincipal,jdbcType=DECIMAL},
      </if>
      <if test="overdueInterest != null" >
        overdue_interest = #{overdueInterest,jdbcType=DECIMAL},
      </if>
      <if test="overdueFine != null" >
        overdue_fine = #{overdueFine,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
        update_time = now(),
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yourong.core.fin.model.OverdueLog" >
    update fin_overdue_log
    set 
      overdue_repay_id = #{overdueRepayId,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT},
      interest_id = #{interestId,jdbcType=BIGINT},
      underwrite_id = #{underwriteId,jdbcType=BIGINT},
      underwrite_member_id = #{underwriteMemberId,jdbcType=BIGINT},
      overdue_principal = #{overduePrincipal,jdbcType=DECIMAL},
      overdue_interest = #{overdueInterest,jdbcType=DECIMAL},
      overdue_fine = #{overdueFine,jdbcType=DECIMAL},
       status = #{status,jdbcType=INTEGER},
       start_date = #{startDate,jdbcType=TIMESTAMP},
        end_date = #{endDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
   <select id="getOverdueLogByInterestId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_log
    where interest_id = #{interestId,jdbcType=BIGINT}
  </select>
  <!-- 通过项目id 查询 逾期记录 -->
   <select id="selectOverdueByProjectId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_log
    where del_flag >0
    <if test="map != null">
		<if test="map.projectId!= null">
				and  project_id = #{map.projectId}
			</if>
			<if test="map.status != null">
				and  status = #{map.status}
			</if>
	</if>
	order by start_date asc limit 1
  </select>
   <select id="selectOverdueDateByProjectId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_log
    where del_flag >0 and status in (1,3) and project_id=#{projectId,jdbcType=BIGINT} 
	order by start_date asc limit 1
  </select>
   <select id="findOverdueByProjectIdTotalCount" resultType="java.lang.Integer">
  	select  count(1)
    from fin_overdue_log
    where del_flag>0 
	 <if test="map != null">
			<if test="map.projectId!= null">
				and  project_id = #{map.projectId}
			</if>
			<if test="map.status != null">
				and  status = #{map.status}
			</if>
			<if test="map.startDate != null">
				and  start_date <![CDATA[ <= ]]> #{map.startDate}
			</if>
	</if>
  </select>
  <!-- 还款日期 -->
   <select id="selectOverdueDyasByProjectId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_log where project_id=#{projectId,jdbcType=BIGINT} and type = 1 and status=1 ORDER BY start_date ASC LIMIT 1
  </select>
  <!-- 统计逾期记录数 -->
   <select id="countOverdueRecordByProjectId" resultType="java.lang.Integer">
  	select  count(1) from fin_overdue_log
    where del_flag>0  and  project_id =  #{projectId,jdbcType=BIGINT} and status=1
  </select>
  <!-- 根据projectId 和 status 统计逾期还款记录数 -->
   <select id="countOverdueRecordByProjectIdandStatus" resultType="java.lang.Integer">
  	select  count(1) from fin_overdue_log
    where del_flag>0  and  status =  #{status,jdbcType=INTEGER} and project_id=#{projectId,jdbcType=BIGINT} and type = 1
  </select>
   <!-- 根据interestId 统计逾期记录数 -->
   <select id="countOverdueRecordByInterestId" resultType="java.lang.Integer">
  	select  count(1) from fin_overdue_log
    where del_flag>0  
			<if test="map != null">
			<if test="map.interestId!= null">
				and  interest_id = #{map.interestId}
			</if>
			<if test="map.status != null">
				and  status = #{map.status}
			</if>
			<if test="map.type != null">
				and  type = #{map.type}
			</if>
	</if>
  </select>
  
  <update id="updateStatusByProjectId">
	  	UPDATE fin_overdue_log
	SET `status` = #{afterStatus,jdbcType=INTEGER},remarks = #{remarks,jdbcType=VARCHAR},update_time= now()
	WHERE
		`status` = #{beforeStatus,jdbcType=INTEGER}
	AND del_flag > 0
	<if test="repayDate!=null">
		AND start_date <![CDATA[ < ]]> #{repayDate,jdbcType=TIMESTAMP}
	</if>
	AND project_id = #{projectId,jdbcType=BIGINT} and type = 1
  </update>
  
  <!-- 更新最近一笔还款中的逾期记录的滞纳金 -->
  <update id="updateOverdueFine" >
  	UPDATE fin_overdue_log
	SET overdue_fine = #{overdueFine,jdbcType=DECIMAL},
	update_time= now()
	WHERE 		
	 del_flag > 0
	AND `status` = #{status,jdbcType=INTEGER}
	AND project_id = #{projectId,jdbcType=BIGINT} and type = 1
	ORDER BY start_date desc limit 1
  </update>
  
  <!-- 更新状态 根据逾期记录id -->
  <update id="updateForOverdueRepaySuccess">
  	UPDATE fin_overdue_log
	SET `status` = #{afterStatus,jdbcType=INTEGER},end_date=now(),update_time= now()
	WHERE
		`status` = #{beforeStatus,jdbcType=INTEGER}
	AND del_flag > 0
	AND id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 通过项目id获取逾期记录 -->
   <select id="getOverdueLogByProjectId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_log
    where project_id = #{projectId,jdbcType=BIGINT} and status=1
  </select>
  <!-- 查询最近一期还款日期 -->
    <select id="selectOverdueRecordByProjectId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_log where project_id=#{projectId,jdbcType=BIGINT} and status=2 ORDER BY end_date desc LIMIT 1
  </select>
  <!-- 计算逾期本金和利息 -->
   <select id="selectOverdueAmountByProjectId" resultMap="BaseResultMap">
   		select sum(overdue_principal) as overdue_principal,
	  		   sum(overdue_interest) as overdue_interest  from fin_overdue_log 
	  	where type = 1 and status in (1,3) and  project_id = #{projectId,jdbcType=BIGINT}
   </select>
   <!--逾期的本息  包含还款中 -->
    <select id="selectOverdueLogPrincipalByProjectId" resultMap="BaseResultMap">
   		select sum(overdue_principal) as overdue_principal,
	  	sum(overdue_interest) as overdue_interest  from fin_overdue_log   where  status in(1,3) and 
	  	project_id = #{projectId,jdbcType=BIGINT}
   </select>
    <select id="selectOverduePayAmountByProjectId" resultMap="BaseResultMap">
	  	select sum(overdue_principal) as overdue_principal,
	  	sum(overdue_interest) as overdue_interest  from fin_overdue_log where  status  in(1,3)  and del_flag>0  and type=1 and 
	  	project_id = #{projectId,jdbcType=BIGINT} and start_date <![CDATA[ <= ]]> #{startDate,jdbcType=TIMESTAMP}
   </select>
   
    <select id="selectNormalOverduePayAmountByProjectId" resultMap="BaseResultMap">
	  	select sum(overdue_principal) as overdue_principal,
	  	sum(overdue_interest) as overdue_interest  from fin_overdue_log where  status  in(1,3)  and type=2 and del_flag>0 and 
	  	project_id = #{projectId,jdbcType=BIGINT} and start_date <![CDATA[ <= ]]> #{startDate,jdbcType=TIMESTAMP}
   </select>
    <sql id="sql_borrowid_project">
        SELECT fp.id,CASE WHEN fp.open_platform_key IS NULL THEN fp.borrower_id ELSE d.`value` END borrower_id FROM ic_project fp LEFT JOIN
		sys_dict d ON d.group_name='channel_business' AND d.`key`=fp.open_platform_key
    </sql>
   <!-- 查询代还本息总计根据memberid -->
    <select id="selectOverduePayAmountByMemberId" resultMap="BaseResultMap">
	  	select sum(f.overdue_principal) as overdue_principal,
	  	sum(f.overdue_interest) as overdue_interest  from fin_overdue_log as f  left join (<include refid="sql_borrowid_project" />) as p
	  	on p.id=f.project_id
	  	where f.status in (1,3)  and f.del_flag>0 and p.borrower_id = #{memberId,jdbcType=BIGINT}
   </select>
     <!-- 通过项目id,type获取逾期记录 -->
   <select id="getOverdueLogByProjectIdAndType" resultType="java.lang.Integer" >
    select  count(1)
    from fin_overdue_log
    where project_id = #{projectId,jdbcType=BIGINT} and type=  #{type,jdbcType=INTEGER}
  </select>
  <!-- 统计逾期或垫资 -->
  <select id="getOverdueLogByInterestIdAndtype" resultType="java.lang.Integer" >
    select  count(1)
    from fin_overdue_log
    where interest_id = #{interestId,jdbcType=BIGINT}  and type= #{type,jdbcType=INTEGER}
  </select>
  
   <select id="getOverdueLogByProjectIdAndStatus" resultType="java.lang.Integer" >
    select  count(1)
    from fin_overdue_log
    where project_id = #{projectId,jdbcType=BIGINT} and type=  2 and status=1 
  </select>
  <select id="selectInterestsByProjectId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    f.id as id, 
    f.project_id as project_id,
    f.interest_id as interest_id,
    f.overdue_principal as overdue_principal,
    f.overdue_interest as overdue_interest,
    f.overdue_fine as overdue_fine,
    f.status as status,
    f.start_date as start_date,
    f.end_date as end_date,  
    f.type as type,
    i.periods as periods
    from ic_debt_interest as i inner join fin_overdue_log as f  on f.interest_id=i.id  
    where i.project_id = #{projectId,jdbcType=BIGINT} and f.type=1  and f.status in (1,3) 
  </select>
  <select id="getCountOverdueRecord" resultType="java.lang.Integer" >
    select  count(1)
    from fin_overdue_log
    where interest_id = #{interestId,jdbcType=BIGINT}   and status in (1,3) 
  </select>
    <select id="getCountOverdueRecordByInterestId" resultType="java.lang.Integer" >
    select  count(1)
    from fin_overdue_log
    where interest_id = #{interestId,jdbcType=BIGINT}   and status in (1,3)  and  type= #{type,jdbcType=INTEGER} 
  </select>
  
  <!-- 更新状态 根据逾期记录id -->
  <update id="updateStatusForOverdueRepay">
  	UPDATE fin_overdue_log
	SET `status` = #{afterStatus,jdbcType=INTEGER},update_time= now()
	WHERE
		`status` = #{beforeStatus,jdbcType=INTEGER}
	AND del_flag > 0
	AND id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 查找项目本息对应的逾期记录 -->
  <select id="selectByInterestId" resultMap="BaseResultMap" >
  	select  <include refid="Base_Column_List" />
    from fin_overdue_log
    where interest_id = #{interestId,jdbcType=BIGINT} and del_flag>0
  </select>
   <select id="countUnderOverdueByProjectId" resultType="java.lang.Integer" >
    select  count(1)
    from fin_overdue_log
    where project_id = #{projectId,jdbcType=BIGINT}  and type= 1 and status in (1,3)
  </select>
  
   <select id="selectUnderOverdueAmountByProjectId" resultMap="BaseResultMap">
   		select sum(overdue_principal) as overdue_principal,
	  	sum(overdue_interest) as overdue_interest  from fin_overdue_log   where  status in (1,3) and type=1  and 
	  	project_id = #{projectId,jdbcType=BIGINT}
   </select>
   
    <select id="getCountOverdueRecordByProjectId" resultType="java.lang.Integer" >
    select  count(1)
    from fin_overdue_log
    where project_id = #{projectId,jdbcType=BIGINT}  and status in (1,3) and type=2 
  </select>
  
  <!-- 根据project_id和status获得逾期的开始时间 -->
  <select id="getStartDateByProjectIdandStatus" resultMap="BaseResultMap">
  	select start_date from fin_overdue_log
    where del_flag>0  and  status =  #{status,jdbcType=INTEGER} and project_id=#{projectId,jdbcType=BIGINT} and type = 1 order by start_date limit 1
  </select>
  
  <!-- 根据project_id和status获得逾期记录id -->
  <select id="getIdsByProjectIdandStatus" resultMap="BaseResultMap">
  	select id from fin_overdue_log
    where del_flag>0  and  status =  #{status,jdbcType=INTEGER} and project_id=#{projectId,jdbcType=BIGINT} and type = 1 
  </select>
  
  <select id="getLockForUpdate" resultMap="BaseResultMap" >
  	select  id from fin_overdue_log where id = #{id,jdbcType=BIGINT} for update  
  </select>
  
   <!-- 根据projectId 统计，项目是否存在逾期未还记录 -->
   <select id="isOverDueUnrepayment" resultType="java.lang.Integer">
  	select  count(1) from fin_overdue_log
    where del_flag>0  and  status <![CDATA[ <> ]]> 2  and project_id=#{projectId,jdbcType=BIGINT} and type =2
  </select>
  
  <!-- 查询本息已还，但是垫资还款未还的最近一期垫资还款记录 -->
  <select id="selectOverdueInfoByProjectId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from fin_overdue_log o
    where del_flag >0 
     and status in (1,3) 
     and project_id=#{projectId,jdbcType=BIGINT} 
     and type = 1
     and exists(select 1 from ic_debt_interest i where o.interest_id=i.id and i.status=1)
	order by start_date asc limit 1
  </select>
  
</mapper>