<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yourong.core.fin.dao.LoanDetailMapper" >
  <resultMap id="BaseResultMap" type="com.yourong.core.fin.model.LoanDetail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="loan_time" property="loanTime" jdbcType="TIMESTAMP" />
    <result column="loan_amount" property="loanAmount" jdbcType="DECIMAL" />
    <result column="user_pay" property="userPay" jdbcType="DECIMAL" />
    <result column="platform_pay" property="platformPay" jdbcType="DECIMAL" />
    <result column="loan_type" property="loanType" jdbcType="INTEGER" />
    <result column="loan_status" property="loanStatus" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, loan_time, loan_amount, user_pay, platform_pay,loan_type, loan_status,remarks,update_time,create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fin_loan_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from fin_loan_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yourong.core.fin.model.LoanDetail" >
    insert into fin_loan_detail (id, project_id, loan_time, 
      loan_amount, user_pay, platform_pay, 
      remarks)
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{loanTime,jdbcType=TIMESTAMP}, 
      #{loanAmount,jdbcType=DECIMAL}, #{userPay,jdbcType=DECIMAL}, #{platformPay,jdbcType=DECIMAL}, 
      #{loanType,jdbcType=INTEGER},#{loanStatus,jdbcType=INTEGER},
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yourong.core.fin.model.LoanDetail" useGeneratedKeys="true" keyProperty="id">
    insert into fin_loan_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
<!--       <if test="id != null" > -->
<!--         id, -->
<!--       </if> -->
      <if test="projectId != null" >
        project_id,
      </if>
        loan_time,
      <if test="loanAmount != null" >
        loan_amount,
      </if>
      <if test="userPay != null" >
        user_pay,
      </if>
      <if test="platformPay != null" >
        platform_pay,
      </if>
      <if test="loanType != null" >
        loan_type,
      </if>
      <if test="loanStatus != null" >
        loan_status,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      update_time,
      create_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
<!--       <if test="id != null" > -->
<!--         #{id,jdbcType=BIGINT}, -->
<!--       </if> -->
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
        now(),
      <if test="loanAmount != null" >
        #{loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="userPay != null" >
        #{userPay,jdbcType=DECIMAL},
      </if>
      <if test="platformPay != null" >
        #{platformPay,jdbcType=DECIMAL},
      </if>
      <if test="loanType != null" >
        #{loanType,jdbcType=INTEGER},
      </if>
       <if test="loanStatus != null" >
        #{loanStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      now(),now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yourong.core.fin.model.LoanDetail" >
    update fin_loan_detail
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="loanTime != null" >
        loan_time = #{loanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loanAmount != null" >
        loan_amount = #{loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="userPay != null" >
        user_pay = #{userPay,jdbcType=DECIMAL},
      </if>
      <if test="platformPay != null" >
        platform_pay = #{platformPay,jdbcType=DECIMAL},
      </if>
      <if test="loanType != null" >
        loan_type = #{loanType,jdbcType=INTEGER},
      </if>
      <if test="loanStatus != null" >
        loan_status = #{loanStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yourong.core.fin.model.LoanDetail" >
    update fin_loan_detail
    set project_id = #{projectId,jdbcType=BIGINT},
      loan_time = #{loanTime,jdbcType=TIMESTAMP},
      loan_amount = #{loanAmount,jdbcType=DECIMAL},
      user_pay = #{userPay,jdbcType=DECIMAL},
      platform_pay = #{platformPay,jdbcType=DECIMAL},
      loan_type = #{loanType,jdbcType=INTEGER},
      loan_status = #{loanStatus,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="batchDelete" parameterType="java.lang.Long" >
    delete from fin_loan_detail
    where id in  <foreach collection="ids" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach>  
  </delete>
  <select id="findByPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from fin_loan_detail
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = #{map.id}
        </if>
        <if test=" map.projectId != null" >
          project_id = #{map.projectId}
        </if>
        <if test=" map.loanTime != null" >
          loan_time = #{map.loanTime}
        </if>
        <if test=" map.loanAmount != null" >
          loan_amount = #{map.loanAmount}
        </if>
        <if test=" map.userPay != null" >
          user_pay = #{map.userPay}
        </if>
        <if test=" map.platformPay != null" >
          platform_pay = #{map.platformPay}
        </if>
        <if test=" map.loanType != null" >
          loan_type = #{map.loanType}
        </if>
        <if test=" map.loanStatus != null" >
          loan_status = #{map.loanStatus}
        </if>
        <if test=" map.remarks != null" >
          remarks = #{map.remarks}
        </if>
      </where>
    </if>
  </select>
  <sql id="Base_Column_List_Pagin" >
    l.id  as  id,
l.project_id  as  project_id,
l.loan_time  as  loan_time,
l.loan_amount  as  loan_amount,
l.user_pay  as  user_pay,
l.platform_pay  as  platform_pay,
l.remarks  as  remarks,
p.name as project_name,
p.status as project_status,
p.online_time as online_time ,
p.sale_end_time as sale_end_time,
p.debt_id as debt_id,
p.total_amount as total_amount,
p.invest_type as invest_type
  </sql>
  
  <resultMap id="ExtendResultMap" type="com.yourong.core.fin.model.LoanDetail" extends="BaseResultMap">
		<result column="project_name" property="projectName" jdbcType="VARCHAR" />
		<result column="project_status" property="projectStatus" jdbcType="INTEGER" />
		<result column="online_time" property="onlineTime" jdbcType="TIMESTAMP" />
		<result column="sale_end_time" property="saleEndTime" jdbcType="TIMESTAMP" />
		<result column="debt_id" property="debtId" jdbcType="BIGINT" />
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="lender_name" property="lenderName" jdbcType="VARCHAR" />
	</resultMap>
  
 <select id="selectForPagin" resultMap="ExtendResultMap" >
    
    select * from (
    	select 
    <include refid="Base_Column_List_Pagin" />,
    (CASE d.lender_type
			WHEN '1' THEN
			    m.true_name
			WHEN '2' THEN
			    e.legal_name
			ELSE
			    '未知出借人类型'
			END ) AS lender_name ,
	(CASE d.lender_type
			WHEN '1' THEN
			    m.mobile
			WHEN '2' THEN
			    e.telephone
			ELSE
			    '未知出借人类型'
			END ) AS lender_mobile 
    from fin_loan_detail as l
	inner join ic_project as p on p.id=l.project_id 
	left join ic_debt as d on d.id=p.debt_id
	left join uc_member as m on m.id=d.lender_id
	left join  uc_enterprise as e on e.legal_id=d.lender_id and e.id=d.enterprise_id
	<if test=" map != null" >
      <where >
        <if test=" map.id != null" >
         and l.id = ${map.id}
        </if>
        <if test=" map.projectId != null" >
         and l.project_id = #{map.projectId}
        </if>
        <if test=" map.projectName!= null" >
         and p.name like  "%" #{map.projectName}"%"
        </if>
        <if test=" map.onlineTimeStart != null">
		and p.online_time <![CDATA[>=]]> #{map.onlineTimeStart}
		</if>
		<if test=" map.onlineTimeEnd != null">
		and p.online_time <![CDATA[<=]]> #{map.onlineTimeEnd}     
		</if>
		<if test=" map.projectStatus!= null" >
        and  p.status = #{map.projectStatus}   
        </if>
        <if test=" map.loanTimeStart != null">
		and l.loan_time <![CDATA[>=]]> #{map.loanTimeStart}
		</if>
		<if test=" map.loanTimeEnd != null">
		and l.loan_time <![CDATA[<=]]> #{map.loanTimeEnd}     
		</if>
			<if test=" map.projectIds != null">
					and l.project_id in
					<foreach item="item" index="index" collection="map.projectIds" 
	                    open="(" separator="," close=")">
	                   #{item}
	            	</foreach>
				</if>
		
		
		
      </where>
    </if>) as loanList  where  loanList.invest_type =1
    	
    	<if test=" map != null">
					<if test=" map.lenderName != null">
						and lender_name = #{map.lenderName}
					</if>
					<if test=" map.lenderMobile != null">
						and lender_mobile = #{map.lenderMobile} 
					</if>
			</if>
	<choose>
			<when test=" map != null">
				<if test=" map.desc != null">
					order by ${map.desc} desc
				</if>
				<if test=" map.asc != null">
					order by ${map.asc} asc
				</if>
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
    LIMIT ${map.startRow}, ${map.pageSize}
    
      
  </select>
  <select id="selectForPaginTotalCount" resultType="java.lang.Integer" >
    select count(1)  from 
    (
    select 
    <include refid="Base_Column_List_Pagin" />,
    (CASE d.lender_type
			WHEN '1' THEN
			    m.true_name
			WHEN '2' THEN
			    e.legal_name
			ELSE
			    '未知出借人类型'
			END ) AS lender_name ,
	(CASE d.lender_type
			WHEN '1' THEN
			    m.mobile
			WHEN '2' THEN
			    e.telephone
			ELSE
			    '未知出借人类型'
			END ) AS lender_mobile 
    from fin_loan_detail as l
	inner join ic_project as p on p.id=l.project_id 
	left join ic_debt as d on d.id=p.debt_id
	left join uc_member as m on m.id=d.lender_id
	left join  uc_enterprise as e on e.legal_id=d.lender_id and e.id=d.enterprise_id
	<if test=" map != null" >
      <where >
        <if test=" map.id != null" >
         and l.id = ${map.id}
        </if>
        <if test=" map.projectId != null" >
         and l.project_id = #{map.projectId}
        </if>
        <if test=" map.projectName!= null" >
         and p.name like  "%" #{map.projectName}"%"
        </if>
        <if test=" map.onlineTimeStart != null">
		and p.online_time <![CDATA[>=]]> #{map.onlineTimeStart}
		</if>
		<if test=" map.onlineTimeEnd != null">
		and p.online_time <![CDATA[<=]]> #{map.onlineTimeEnd}     
		</if>
		<if test=" map.projectStatus!= null" >
        and  p.status = #{map.projectStatus}   
        </if>
        <if test=" map.loanTimeStart != null">
		and l.loan_time <![CDATA[>=]]> #{map.loanTimeStart}
		</if>
		<if test=" map.loanTimeEnd != null">
		and l.loan_time <![CDATA[<=]]> #{map.loanTimeEnd}     
		</if>
			<if test=" map.projectIds != null">
					and l.project_id in
					<foreach item="item" index="index" collection="map.projectIds" 
	                    open="(" separator="," close=")">
	                   #{item}
	            	</foreach>
				</if>
		
		
		
      </where>
    </if>) as loanList where  loanList.invest_type =1 
    	
    	<if test=" map != null">
					<if test=" map.lenderName != null">
						and lender_name = #{map.lenderName}
					</if>
					<if test=" map.lenderMobile != null">
						and lender_mobile = #{map.lenderMobile} 
					</if>
			</if>
  </select>
  <select id="getLoanTimeByProjectId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fin_loan_detail
    where project_id = #{projectId,jdbcType=BIGINT} and loan_type=2 and loan_status=1 LIMIT 1
  </select>
</mapper>