<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yourong.core.mc.dao.ActivityMessageMapper" >
  <resultMap id="BaseResultMap" type="com.yourong.core.mc.model.ActivityMessage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="activity_id" property="activityId" jdbcType="BIGINT" />
    <result column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="template_id" property="templateId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="content" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, activity_id, member_id, template_id, create_time, update_time, remark, del_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from mc_activity_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from mc_activity_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yourong.core.mc.model.ActivityMessage" >
    INSERT INTO mc_activity_message (
		activity_id,
		member_id,
		template_id,
		create_time,
		update_time,
		remark,
		del_flag
	)
	SELECT
			#{activityId,jdbcType=BIGINT},
			#{memberId,jdbcType=BIGINT},
			id,
			NOW(),
			NOW(),
			#{remark,jdbcType=VARCHAR},
			1
	FROM mc_activity_message_template WHERE id = #{templateId,jdbcType=BIGINT} and del_flag = 1
  </insert>
  <insert id="insertSelective" parameterType="com.yourong.core.mc.model.ActivityMessage" >
    insert into mc_activity_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="templateId != null" >
        template_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="templateId != null" >
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yourong.core.mc.model.ActivityMessage" >
    update mc_activity_message
    <set >
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="templateId != null" >
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yourong.core.mc.model.ActivityMessage" >
    update mc_activity_message
    set activity_id = #{activityId,jdbcType=BIGINT},
      member_id = #{memberId,jdbcType=BIGINT},
      template_id = #{templateId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="batchDelete" parameterType="java.lang.Long" >
    delete from mc_activity_message
    where id in  <foreach collection="ids" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach>  
  </delete>
  <select id="findByPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from mc_activity_message
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = #{map.id}
        </if>
        <if test=" map.activityId != null" >
          activity_id = #{map.activityId}
        </if>
        <if test=" map.memberId != null" >
          member_id = #{map.memberId}
        </if>
        <if test=" map.templateId != null" >
          template_id = #{map.templateId}
        </if>
        <if test=" map.createTime != null" >
          create_time = #{map.createTime}
        </if>
        <if test=" map.updateTime != null" >
          update_time = #{map.updateTime}
        </if>
        <if test=" map.remark != null" >
          remark = #{map.remark}
        </if>
        <if test=" map.delFlag != null" >
          del_flag = #{map.delFlag}
        </if>
      </where>
    </if>
  </select>
  <sql id="Base_Column_List_Pagin" >
    t.id  as  id,
t.activity_id  as  activity_id,
t.member_id  as  member_id,
t.template_id  as  template_id,
t.create_time  as  create_time,
t.update_time  as  update_time,
t.remark  as  remark,
t.del_flag  as  del_flag
  </sql>
  <select id="selectForPagin" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List_Pagin" />
    from  (SELECT id FROM  mc_activity_message
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = #{map.id}
        </if>
        <if test=" map.activityId != null" >
          activity_id = #{map.activityId}
        </if>
        <if test=" map.memberId != null" >
          member_id = #{map.memberId}
        </if>
        <if test=" map.templateId != null" >
          template_id = #{map.templateId}
        </if>
        <if test=" map.createTime != null" >
          create_time = #{map.createTime}
        </if>
        <if test=" map.updateTime != null" >
          update_time = #{map.updateTime}
        </if>
        <if test=" map.remark != null" >
          remark = #{map.remark}
        </if>
        <if test=" map.delFlag != null" >
          del_flag = #{map.delFlag}
        </if>
      </where>
    </if>
      LIMIT	${map.startRow}, ${map.pageSize}  )  AS a,  mc_activity_message AS t FORCE INDEX(PRIMARY) WHERE a.id = t.id   
  </select>
  <select id="selectForPaginTotalCount" resultType="java.lang.Integer" >
    select count(1) 
    from mc_activity_message
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = ${map.id}
        </if>
        <if test=" map.activityId != null" >
          activity_id = ${map.activityId}
        </if>
        <if test=" map.memberId != null" >
          member_id = ${map.memberId}
        </if>
        <if test=" map.templateId != null" >
          template_id = ${map.templateId}
        </if>
        <if test=" map.createTime != null" >
          create_time = ${map.createTime}
        </if>
        <if test=" map.updateTime != null" >
          update_time = ${map.updateTime}
        </if>
        <if test=" map.remark != null" >
          remark = ${map.remark}
        </if>
        <if test=" map.delFlag != null" >
          del_flag = ${map.delFlag}
        </if>
      </where>
    </if>
  </select>
  
  <select id="selectRankByActivityId" resultMap="BaseResultMap">
  	SELECT
	    m.member_id, m.create_time, t.content
	FROM
	    mc_activity_message AS m
	JOIN mc_activity_message_template AS t ON m.template_id = t.id
	WHERE
	    m.activity_id = #{activityId, jdbcType=BIGINT}
	AND m.del_flag = 1
	ORDER BY
	    m.create_time DESC
	LIMIT #{rowNum, jdbcType=INTEGER}
  </select>
  
  <select id="checkMessageByActivityIdAndMemberId" resultMap="BaseResultMap">
  	SELECT
	    m.id
	FROM
	    mc_activity_message AS m
	WHERE
	    m.member_id = #{memberId, jdbcType=BIGINT}
	AND m.activity_id = #{activityId, jdbcType=BIGINT}
	AND m.del_flag = 1
	LIMIT 1
  </select>
  
  
  <select id="selectPkHistroyByActivityId" resultMap="BaseResultMap">
  	SELECT
	   <include refid="Base_Column_List" />
	FROM
	    mc_activity_message 
	WHERE
	    activity_id = #{activityId, jdbcType=BIGINT} and template_id=1003  ORDER BY create_time
  </select>
  
   <select id="selectFirstTenHistroyByActivityId" resultMap="BaseResultMap">
  	SELECT
	   <include refid="Base_Column_List" />
	FROM
	    mc_activity_message 
	WHERE
	    activity_id = #{activityId, jdbcType=BIGINT} and  template_id = #{templateId, jdbcType=BIGINT}   ORDER BY create_time desc limit 1 
  </select>
  
  <select id="selectTotalAmountByActivityId" resultMap="BaseResultMap">
  	SELECT
	   <include refid="Base_Column_List" />
	FROM
	    mc_activity_message 
	WHERE
	    activity_id = #{activityId, jdbcType=BIGINT} and  template_id=1003   ORDER BY create_time desc limit 1 
  </select>
</mapper>