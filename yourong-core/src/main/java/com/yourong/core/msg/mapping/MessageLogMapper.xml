<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yourong.core.msg.dao.MessageLogMapper" >
  <resultMap id="BaseResultMap" type="com.yourong.core.msg.model.MessageLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="msg_body_id" property="msgBodyId" jdbcType="BIGINT" />
    <result column="receive_date" property="receiveDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="msg_type" property="msgType" jdbcType="INTEGER" />
    <result column="notify_type" property="notifyType" jdbcType="INTEGER" />
    <result column="service_type" property="serviceType" jdbcType="INTEGER" />
    <result column="msg_source" property="msgSource" jdbcType="INTEGER" />
    <result column="msg_source_id" property="msgSourceId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, member_id, msg_body_id, receive_date, status, del_flag, msg_type, notify_type, service_type,
    msg_source,msg_source_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from msg_message_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from msg_message_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yourong.core.msg.model.MessageLog" useGeneratedKeys="true" keyProperty="id">
    insert into msg_message_log (id, member_id, msg_body_id, 
      receive_date, status, del_flag, 
      msg_type, notify_type, service_type , msg_source,msg_source_id
      )
    values (#{id,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, #{msgBodyId,jdbcType=BIGINT}, 
      #{receiveDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{delFlag,jdbcType=INTEGER}, 
      #{msgType,jdbcType=INTEGER}, #{notifyType,jdbcType=INTEGER}, #{serviceType,jdbcType=INTEGER},#{msgSource,jdbcType=INTEGER}, #{msgSourceId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yourong.core.msg.model.MessageLog">
    insert into msg_message_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="msgBodyId != null" >
        msg_body_id,
      </if>
      <if test="receiveDate != null" >
        receive_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="msgType != null" >
        msg_type,
      </if>
      <if test="notifyType != null" >
        notify_type,
      </if>
      <if test="msgSource != null" >
        msg_source,
      </if>
      <if test="msgSourceId != null" >
        msg_source_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="msgBodyId != null" >
        #{msgBodyId,jdbcType=BIGINT},
      </if>
      <if test="receiveDate != null" >
        #{receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="msgType != null" >
        #{msgType,jdbcType=INTEGER},
      </if>
      <if test="notifyType != null" >
        #{notifyType,jdbcType=INTEGER},
      </if>
      <if test="msgSource != null" >
        #{msgSource,jdbcType=INTEGER},
      </if>
      <if test="msgSourceId != null" >
        #{msgSourceId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yourong.core.msg.model.MessageLog" >
    update msg_message_log
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="msgBodyId != null" >
        msg_body_id = #{msgBodyId,jdbcType=BIGINT},
      </if>
      <if test="receiveDate != null" >
        receive_date = #{receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="msgType != null" >
        msg_type = #{msgType,jdbcType=INTEGER},
      </if>
      <if test="notifyType != null" >
        notify_type = #{notifyType,jdbcType=INTEGER},
      </if>
      <if test="msgSource != null" >
        msg_source = #{msgSource,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yourong.core.msg.model.MessageLog" >
    update msg_message_log
    set member_id = #{memberId,jdbcType=BIGINT},
      msg_body_id = #{msgBodyId,jdbcType=BIGINT},
      receive_date = #{receiveDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER},
      msg_type = #{msgType,jdbcType=INTEGER},
      notify_type = #{notifyType,jdbcType=INTEGER},
      msg_source = #{msgSource,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="batchDelete" parameterType="java.lang.Long" >
    delete from msg_message_log
    where id in  <foreach collection="ids" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach>  
  </delete>
  <select id="findByPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from msg_message_log
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = #{map.id}
        </if>
        <if test=" map.memberId != null" >
          member_id = #{map.memberId}
        </if>
        <if test=" map.msgBodyId != null" >
          msg_body_id = #{map.msgBodyId}
        </if>
        <if test=" map.receiveDate != null" >
          receive_date = #{map.receiveDate}
        </if>
        <if test=" map.status != null" >
          status = #{map.status}
        </if>
        <if test=" map.delFlag != null" >
          del_flag = #{map.delFlag}
        </if>
        <if test=" map.msgType != null" >
          msg_type = #{map.msgType}
        </if>
        <if test=" map.notifyType != null" >
          notify_type = #{map.notifyType}
        </if>
        <if test=" map.msgSource != null" >
          msg_source = #{map.msgSource}
        </if>
      </where>
    </if>
  </select>
  <sql id="Base_Column_List_Pagin" >
    t.id  as  id,
t.member_id  as  member_id,
t.msg_body_id  as  msg_body_id,
t.receive_date  as  receive_date,
t.status  as  status,
t.del_flag  as  del_flag,
t.msg_type  as  msg_type,
t.notify_type  as  notify_type,
t.service_type as service_type,
t.msg_source  as  msg_source
  </sql>
  <select id="selectForPagin" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List_Pagin" />
    from  (SELECT id FROM  msg_message_log
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = #{map.id}
        </if>
        <if test=" map.memberId != null" >
          member_id = #{map.memberId}
        </if>
        <if test=" map.msgBodyId != null" >
          msg_body_id = #{map.msgBodyId}
        </if>
        <if test=" map.receiveDate != null" >
          receive_date = #{map.receiveDate}
        </if>
        <if test=" map.status != null" >
          status = #{map.status}
        </if>
        <if test=" map.delFlag != null" >
          del_flag = #{map.delFlag}
        </if>
        <if test=" map.msgType != null" >
          msg_type = #{map.msgType}
        </if>
        <if test=" map.notifyType != null" >
          notify_type = #{map.notifyType}
        </if>
        <if test=" map.msgSource != null" >
          msg_source = #{map.msgSource}
        </if>
      </where>
    </if>
      LIMIT	${map.startRow}, ${map.pageSize}  )  AS a,  msg_message_log AS t FORCE INDEX(PRIMARY) WHERE a.id = t.id   
  </select>
  <select id="selectForPaginTotalCount" resultType="java.lang.Integer" >
    select count(1) 
    from msg_message_log
    <if test=" map != null" >
      <where >
        <if test=" map.id != null" >
          id = ${map.id}
        </if>
        <if test=" map.memberId != null" >
          member_id = ${map.memberId}
        </if>
        <if test=" map.msgBodyId != null" >
          msg_body_id = ${map.msgBodyId}
        </if>
        <if test=" map.receiveDate != null" >
          receive_date = ${map.receiveDate}
        </if>
        <if test=" map.status != null" >
          status = ${map.status}
        </if>
        <if test=" map.delFlag != null" >
          del_flag = ${map.delFlag}
        </if>
        <if test=" map.msgType != null" >
          msg_type = ${map.msgType}
        </if>
        <if test=" map.notifyType != null" >
          notify_type = ${map.notifyType}
        </if>
        <if test=" map.msgSource != null" >
          msg_source = ${map.msgSource}
        </if>
      </where>
    </if>
  </select>
  
    <resultMap type="MessageLogForMember" id="ResultMessageLogForMember" extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
 	</resultMap>
  
  <select id="queryMessageLogForPagin" resultMap="ResultMessageLogForMember" parameterType="MessageLogQuery">
	select mml.id as id,mmb.content as content,mml.member_id as memberId, 
	mml.receive_date as receiveDate, mml.msg_type as msgType,mml.service_type as service_type, 
	mml.notify_type as notifyType, mml.status as status 
	from msg_message_log as mml 
	inner JOIN msg_message_body as mmb on mml.msg_body_id = mmb.id 
	where mml.msg_source = mmb.msg_source
	<if test=" memberId != null" >
        	and mml.member_id = #{memberId,jdbcType=BIGINT}
       </if>
       <if test=" receiveDate != null" >
        <choose>
        	<when test="range == 1">
        		and mml.receive_date <![CDATA[ >= ]]> #{receiveDate,jdbcType=TIMESTAMP} and mml.receive_date <![CDATA[<=]]> now()
        	</when>
        	<otherwise>
        		and mml.receive_date <![CDATA[<=]]> #{receiveDate,jdbcType=TIMESTAMP}
        	</otherwise>
        </choose>
       </if>
    	<if test=" notifyType == 0" >
       		 and mml.notify_type in <foreach collection="notifyTypeIds" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach>  
       </if>
       <if test=" msgTypeIds != null" >
       		 and mml.msg_type in <foreach collection="msgTypeIds" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach>  
       </if>
       <choose>
        	<when test="notifyType == 0">
        		and notify_type in <foreach collection="notifyTypeIds" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach> 
        	</when>
        	<otherwise>
        		 and mml.notify_type <![CDATA[>]]> 0
        	</otherwise>
        </choose>
       and mml.del_flag = 1
      order by mml.status asc, mml.receive_date desc  LIMIT #{startRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER} 
  </select>
  
  
  <select id="queryMessageLogForPaginTotalCount"  parameterType="MessageLogQuery" resultType="java.lang.Integer">
	select count(1)  from 
		msg_message_log as mml inner JOIN msg_message_body as mmb on mml.msg_body_id = mmb.id 
	where mml.msg_source = mmb.msg_source
       <if test=" memberId != null" >
        	and mml.member_id = #{memberId,jdbcType=BIGINT}
       </if>
       <if test=" receiveDate != null" >
	        <choose>
	        	<when test="range == 1">
	        		and mml.receive_date <![CDATA[ >= ]]> #{receiveDate,jdbcType=TIMESTAMP} and mml.receive_date <![CDATA[<=]]> now()
	        	</when>
	        	<otherwise>
	        		and mml.receive_date <![CDATA[<=]]> #{receiveDate,jdbcType=TIMESTAMP}
	        	</otherwise>
	        </choose>
       </if>
        <if test=" msgTypeIds != null" >
       		 and mml.msg_type in <foreach collection="msgTypeIds" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach>  
       </if>
       <choose>
        	<when test="notifyType == 0">
        		and notify_type in <foreach collection="notifyTypeIds" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach> 
        	</when>
        	<otherwise>
        		 and mml.notify_type <![CDATA[>]]> 0
        	</otherwise>
        </choose>
       and mml.del_flag = 1
  </select>
  
  <!-- 批量更新消息状态-->
  <update id="batchUpdateMessageStatus">
		update msg_message_log set status= 1 where member_id=#{memberId,jdbcType=BIGINT}  and status = 0
		 <if test=" receiveDate != null" >
	        <choose>
	        	<when test="range == 1">
	        		and receive_date <![CDATA[ >= ]]> #{receiveDate,jdbcType=TIMESTAMP} and receive_date <![CDATA[<=]]> now()
	        	</when>
	        	<otherwise>
	        		and receive_date <![CDATA[<=]]> #{receiveDate,jdbcType=TIMESTAMP}
	        	</otherwise>
	        </choose>
       </if>
       <choose>
        	<when test="notifyType == 0">
        		and notify_type in <foreach collection="notifyTypeIds" index="index" item="item" open="(" separator="," close=")"> #{item}  </foreach> 
        	</when>
        	<otherwise>
        		 and notify_type <![CDATA[>]]> 0
        	</otherwise>
        </choose>
  </update>
  
  <!-- 更新消息状态-->
  <update id="updateMessageStatus">
		update msg_message_log set status= 1 where member_id=#{memberId,jdbcType=BIGINT} and id= #{messageId,jdbcType=BIGINT} and status = 0;
  </update>
  
  <!-- 统计未读消息 -->
  <select id="countUnreadMessage" resultType="java.lang.Integer">
  	 select count(1)  from msg_message_log where member_id=#{memberId,jdbcType=BIGINT} and status=0
  </select>
  
  <!-- 根据memberId和消息类型，更新消息已读-->
  <update id="updateMessageStatusByMemberId">
		update msg_message_log set status= 1 
		where member_id=#{memberId,jdbcType=BIGINT} and msg_type= #{msgType,jdbcType=BIGINT} 
		and status = 0;
  </update>
  
  <!-- 统计未读消息 -->
  <select id="countUnreadMessageByType" resultType="java.lang.Integer">
  	 select count(1)  from msg_message_log where member_id=#{memberId,jdbcType=BIGINT} and status=0 and msg_type= #{msgType,jdbcType=BIGINT} 
  </select>
  
  
</mapper>