var path = environment.globalPath;// console.info(path)var app = new Vue({    el: '#helpContent',    data: {        tabs: [            {title: '热门问题'},            {title: '常见问题'},            {title: '新手引导'}        ],        q_category: [            {value: '账户类'},            {value: '资金类'},            {value: '投资类'},            {value: '功能类'},            {value: '活动类'}        ],        urls: {            helpHomePage: path + '/helpCenter/helpHomePage',            helpQuestionTypes: path + '/helpCenter/helpQuestionTypes',            newComer: path + '/helpCenter/newComer',            helpCenterBehavior: path + '/helpCenter/helpCenterBehavior'        },        init: {},        tabIndex: 0,        cateIndex: 0,        commonInit: {},        aAccount: {},        accountValue: {},        aFund: {},        aInvest: {},        aFn: {},        aActivity: {}    },    created: function () {        var self = this        $.xPost({            url: self.urls.helpHomePage,            type: 'GET',            callback: function (data) {                if (data.success) {                    self.init = data.result;                } else {                    console.log('少年莫慌,稍等一下', data)                }            }        })    },    methods: {        changeTab: function (id) {            var self = this            this.tabIndex = id            // console.log(id)            switch (this.tabIndex) {                case 0:                    $.xPost({                        url: self.urls.helpHomePage,                        type: 'GET',                        callback: function (data) {                            if (data.success) {                                self.init = data.result;                            } else {                                console.log('少年莫慌,稍等一下。', data)                            }                        }                    })                    break                case 1:                    $.xPost({                        url: self.urls.helpQuestionTypes,                        type: 'GET',                        callback: function (data) {                            if (data.success) {                                var commonInit = self.commonInit = data.result;                                self.aAccount = commonInit['PCAccountQuestion']                                self.aFund = commonInit['PCFundQuestion']                                self.aInvest = commonInit['PCInvestQuestion']                                self.aFn = commonInit['PCFunctionQuestion']                                self.aActivity = commonInit['PCActivityQuestion']                            } else {                                console.log('少年莫慌,稍等一下。', data)                            }                        }                    })                    break                case 2:                    $.xPost({                        url: self.urls.newComer,                        type: 'GET',                        callback: function (data) {                            if (data.success) {                                var init = self.init = data.result;                            } else {                                console.log('少年莫慌,稍等一下。', data)                            }                        }                    })                    break            }        },        changeCate: function (index) {            this.cateIndex = index        },        count: function (id, e) {            var self = this,                xToken = $('#xToken').val();            var parNode = e.target.parentNode.nextSibling.parentNode.children;            var aPar = [].slice.call(parNode)            // console.info(aPar[1].className.indexOf('f-dn'))            if (e.target.nextSibling && e.target.nextSibling.nextSibling.className.indexOf('f-dn') > 0 || aPar[1].className.indexOf('f-dn') > 0) {                $.xPost({                    url: self.urls.helpCenterBehavior,                    type: 'POST',                    data: {                        anchor: "K" + id,                        xToken: xToken                    }                })            } else {                return            }        }    }})$('.u-guide-items').on("click", 'h2', function () {    if ($(this).parent().find('.u-demand').length) {        if ($(this).parent().find('.u-demand').hasClass('f-dn')) {            $(this).parent().find('i').text('-')            $(this).parent().siblings().find('i').text('+')            $(this).parent().find('.u-demand').removeClass('f-dn')            $(this).parent().siblings().find('.u-demand').addClass('f-dn')            $(this).parent().find('i').addClass('z-disabled')            $(this).parent().siblings().find('i').removeClass('z-disabled')        } else {            $(this).parent().find('i').text('+')            $(this).parent().find('.u-demand').addClass('f-dn')            $(this).parent().find('i').removeClass('z-disabled')        }    }    if ($(this).parent().parent().siblings().find('.u-demand').length) {        if ($(this).parent().parent().siblings().find('.u-demand').hasClass('f-dn')) {            $(this).parent().parent().siblings().find('h2 i').text('+')            $(this).parent().parent().siblings().find('.u-demand').addClass('f-dn')            $(this).parent().parent().siblings().find('h2 i').removeClass('z-disabled')        } else {            $(this).parent().parent().siblings().find('h2 i').text('+')            $(this).parent().parent().siblings().find('.u-demand').addClass('f-dn')            $(this).parent().parent().siblings().find('h2 i').removeClass('z-disabled')        }    }})